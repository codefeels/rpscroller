{"version":3,"file":"RedGifsCard-VPV6wlwc.js","sources":["../../src/RedGifsCard.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport { useDebounceValue, useIntersectionObserver } from 'usehooks-ts'\n\nimport Button from './Button'\nimport { useIsSmallScreen } from './useIsSmallScreen'\nimport { redGifUrlToId } from './util'\n\nimport type { Post } from './util'\n\nfunction RedGifsCardLoaded({ post, val }: { post: Post; val: number }) {\n  const { title, url } = post\n  return (\n    <>\n      <iframe\n        title={title}\n        src={`https://www.redgifs.com/ifr/${redGifUrlToId(url)}`}\n        className=\"w-full overflow-hidden\"\n        style={{ height: `${val}vh` }}\n        loading=\"lazy\"\n        allowFullScreen\n      />\n    </>\n  )\n}\n\nfunction RedGifsLoading({ val }: { val: number }) {\n  return (\n    <div\n      className={`animate-pulse space-y-4 w-full`}\n      style={{ height: `${val}vh` }}\n    >\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n    </div>\n  )\n}\n\nexport default function RedGifsCard({ post }: { post: Post }) {\n  const [val, setVal] = useState(80)\n  const { isIntersecting, ref } = useIntersectionObserver({\n    threshold: val > 100 ? 0.1 : 0.5,\n  })\n  const [debouncedIsIntersecting] = useDebounceValue(isIntersecting, 1000)\n  const small = useIsSmallScreen()\n\n  return (\n    <div ref={ref}>\n      {small ? null : (\n        <div>\n          <input\n            type=\"range\"\n            min={50}\n            max={300}\n            className=\"range [--range-fill:0]\"\n            value={val}\n            onChange={event => {\n              setVal(+event.target.value)\n            }}\n          />\n          <Button\n            onClick={() => {\n              setVal(200)\n            }}\n          >\n            Maximize\n          </Button>\n          <Button\n            onClick={() => {\n              setVal(80)\n            }}\n          >\n            Minimize\n          </Button>\n        </div>\n      )}\n      {debouncedIsIntersecting ? (\n        <RedGifsCardLoaded val={val} post={post} />\n      ) : (\n        <RedGifsLoading val={val} />\n      )}\n    </div>\n  )\n}\n"],"names":["RedGifsCardLoaded","post","val","title","url","jsx","Fragment","redGifUrlToId","RedGifsLoading","jsxs","RedGifsCard","setVal","useState","isIntersecting","ref","useIntersectionObserver","debouncedIsIntersecting","useDebounceValue","small","useIsSmallScreen","event","Button"],"mappings":"kFAUA,SAASA,EAAkB,CAAE,KAAAC,EAAM,IAAAC,GAAoC,CACrE,KAAM,CAAE,MAAAC,EAAO,IAAAC,CAAA,EAAQH,EACvB,OACEI,MAAAC,EAAAA,SAAA,CACE,SAAAD,EAAAA,IAAC,SAAA,CACC,MAAAF,EACA,IAAK,+BAA+BI,EAAcH,CAAG,CAAC,GACtD,UAAU,yBACV,MAAO,CAAE,OAAQ,GAAGF,CAAG,IAAA,EACvB,QAAQ,OACR,gBAAe,EAAA,CAAA,EAEnB,CAEJ,CAEA,SAASM,EAAe,CAAE,IAAAN,GAAwB,CAChD,OACEO,EAAAA,KAAC,MAAA,CACC,UAAW,iCACX,MAAO,CAAE,OAAQ,GAAGP,CAAG,IAAA,EAEvB,SAAA,CAAAG,EAAAA,IAAC,MAAA,CAAI,UAAU,qCAAA,CAAsC,EACrDA,EAAAA,IAAC,MAAA,CAAI,UAAU,qCAAA,CAAsC,EACrDA,EAAAA,IAAC,MAAA,CAAI,UAAU,qCAAA,CAAsC,EACrDA,EAAAA,IAAC,MAAA,CAAI,UAAU,qCAAA,CAAsC,CAAA,CAAA,CAAA,CAG3D,CAEA,SAAwBK,EAAY,CAAE,KAAAT,GAAwB,CAC5D,KAAM,CAACC,EAAKS,CAAM,EAAIC,EAAAA,SAAS,EAAE,EAC3B,CAAE,eAAAC,EAAgB,IAAAC,CAAA,EAAQC,EAAwB,CACtD,UAAWb,EAAM,IAAM,GAAM,EAAA,CAC9B,EACK,CAACc,CAAuB,EAAIC,EAAiBJ,EAAgB,GAAI,EACjEK,EAAQC,EAAA,EAEd,OACEV,OAAC,OAAI,IAAAK,EACF,SAAA,CAAAI,EAAQ,YACN,MAAA,CACC,SAAA,CAAAb,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,IAAK,GACL,IAAK,IACL,UAAU,yBACV,MAAOH,EACP,SAAUkB,GAAS,CACjBT,EAAO,CAACS,EAAM,OAAO,KAAK,CAC5B,CAAA,CAAA,EAEFf,EAAAA,IAACgB,EAAA,CACC,QAAS,IAAM,CACbV,EAAO,GAAG,CACZ,EACD,SAAA,UAAA,CAAA,EAGDN,EAAAA,IAACgB,EAAA,CACC,QAAS,IAAM,CACbV,EAAO,EAAE,CACX,EACD,SAAA,UAAA,CAAA,CAED,EACF,EAEDK,QACEhB,EAAA,CAAkB,IAAAE,EAAU,KAAAD,EAAY,EAEzCI,EAAAA,IAACG,GAAe,IAAAN,CAAA,CAAU,CAAA,EAE9B,CAEJ"}