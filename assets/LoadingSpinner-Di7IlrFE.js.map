{"version":3,"mappings":"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","names":["ErrorMessage","error","jsxs","jsx","instanceOfAny","object","constructors","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","getCursorAdvanceMethods","transactionDoneMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","resolve","reject","unlisten","success","wrap","cacheDonePromiseForTransaction","tx","done","complete","idbProxyTraps","target","prop","receiver","value","replaceTraps","callback","wrapFunction","func","args","unwrap","transformCachableValue","newValue","openDB","name","version","blocked","upgrade","blocking","terminated","openPromise","event","db","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","method","storeName","oldTraps","advanceMethodProps","methodMap","advanceResults","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","cachedFunc","iterate","cursor","proxiedCursor","isIteratorProp","dbPromise","AddToFeedDialog","lazy","__vitePreload","savePost","post","removeSavedPost","SubredditButtons","store","useAppStore","author","subreddit","subreddit_name_prefixed","crosspost_parent_list","val","origsubreddit","_a","thissubreddit","hasFavSubOrig","hasFavorite","hasFavSubThis","saved","setSaved","useState","setError","addToFeedDialogOpen","setAddToFeedDialogOpen","userreddit","Fragment","Link","ButtonM1","MdFavorite","FaSave","FaPlus","Suspense","UserButtons","favorites","hasFavUser","MdBlock","CardButtons","CardHeader","hideButtons","title","permalink","url","decode","formatDistanceToNowStrict","BiSolidUpvote","ImageCard","fullSize","setFullSize","RedGifsCard","GalleryCard","isPic","Card","NoResultsMessage","totalFiltered","redGifsOnly","Button","filterPosts","posts","options","result","stats","afterCommentFilter","afterUrlFilter","afterGifFilter","afterRedGifsOnlyFilter","afterNoRedGifsFilter","afterPinnedFilter","afterBlockedFilter","deduplicate","CardList","noGifs","skipPinned","dedupe","fullscreen","noRedGifs","LoadingSpinner"],"ignoreList":[1],"sources":["../../src/ErrorMessage.tsx","../../node_modules/idb/build/index.js","../../src/savedPostsDb.ts","../../src/SubredditButtons.tsx","../../src/UserButtons.tsx","../../src/CardButtons.tsx","../../src/CardHeader.tsx","../../src/ImageCard.tsx","../../src/Card.tsx","../../src/NoResultsMessage.tsx","../../src/postFilters.ts","../../src/CardList.tsx","../../src/LoadingSpinner.tsx"],"sourcesContent":["export default function ErrorMessage({ error }: { error: unknown }) {\n  return (\n    <div className=\"text-red-600 m-20\">\n      <div>{`${error}`}</div>\n      <div>\n        {`${error}` ===\n        'TypeError: NetworkError when attempting to fetch resource.'\n          ? \"If you are on firefox then you can disable 'Enhanced Tracking Protection' (at your own risk) to fix this error\"\n          : ''}{' '}\n      </div>\n    </div>\n  )\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n","import { openDB } from 'idb'\n\nconst dbPromise = openDB('test', 2, {\n  upgrade(db) {\n    db.createObjectStore('savedPosts')\n  },\n})\n\nexport { dbPromise }\n","import { Suspense, lazy, useState } from 'react'\n\nimport { FaSave } from 'react-icons/fa'\nimport { FaPlus } from 'react-icons/fa6'\nimport { MdFavorite } from 'react-icons/md'\nimport { Link } from 'react-router-dom'\n\nimport ButtonM1 from './ButtonM1'\nimport ErrorMessage from './ErrorMessage'\nimport { dbPromise } from './savedPostsDb'\nimport { useAppStore } from './store'\nimport { type Post, hasFavorite } from './util'\n\n// lazies\nconst AddToFeedDialog = lazy(() => import('./AddToFeedDialog'))\n\nasync function savePost(post: Post) {\n  const db = await dbPromise\n  await db.put('savedPosts', post, post.id)\n}\n\nasync function removeSavedPost(post: Post) {\n  const db = await dbPromise\n  await db.delete('savedPosts', post.id)\n}\n\nexport default function SubredditButtons({ post }: { post: Post }) {\n  const store = useAppStore()\n  const { author, subreddit, subreddit_name_prefixed, crosspost_parent_list } =\n    post\n  const { val } = store\n  const origsubreddit =\n    crosspost_parent_list?.[0]?.subreddit_name_prefixed ?? ''\n  const thissubreddit = subreddit_name_prefixed\n  const hasFavSubOrig = hasFavorite(subreddit_name_prefixed, store.favorites)\n  const hasFavSubThis = hasFavorite(subreddit_name_prefixed, store.favorites)\n  const [saved, setSaved] = useState(false)\n  const [error, setError] = useState<unknown>()\n  const [addToFeedDialogOpen, setAddToFeedDialogOpen] = useState(false)\n\n  const userreddit = `/u/${author}`\n  return (\n    <div>\n      {error ? <ErrorMessage error={error} /> : null}\n      {origsubreddit ? (\n        <>\n          <Link to={origsubreddit}>\n            <ButtonM1>Browse {origsubreddit}</ButtonM1>\n          </Link>\n          {hasFavSubOrig ? null : (\n            <ButtonM1\n              onClick={() => {\n                store.addFavorite(origsubreddit)\n              }}\n            >\n              <MdFavorite className=\"inline\" /> {origsubreddit}\n            </ButtonM1>\n          )}\n        </>\n      ) : null}\n      {thissubreddit === userreddit ? null : (\n        <>\n          <Link to={thissubreddit}>\n            <ButtonM1>Browse {thissubreddit}</ButtonM1>\n          </Link>\n          {hasFavSubThis ? null : (\n            <ButtonM1\n              onClick={() => {\n                store.addFavorite(thissubreddit)\n              }}\n            >\n              <MdFavorite className=\"inline\" /> {thissubreddit}\n            </ButtonM1>\n          )}\n        </>\n      )}\n      {val === 'savedposts' ? (\n        <ButtonM1\n          onClick={() => {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            ;(async () => {\n              try {\n                setError(undefined)\n                await removeSavedPost(post)\n                store.forceRerender()\n              } catch (error) {\n                setError(error)\n                console.error(error)\n              }\n            })()\n          }}\n        >\n          <FaSave className=\"inline\" /> Remove from saved\n        </ButtonM1>\n      ) : (\n        <ButtonM1\n          onClick={() => {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            ;(async () => {\n              try {\n                setError(undefined)\n                await savePost(post)\n              } catch (error) {\n                setError(error)\n                console.error(error)\n              }\n            })()\n            setSaved(true)\n            setTimeout(() => {\n              setSaved(false)\n            }, 400)\n          }}\n        >\n          <FaSave className=\"inline\" /> {saved ? 'Saved!' : 'Save post'}\n        </ButtonM1>\n      )}\n      <ButtonM1\n        onClick={() => {\n          setAddToFeedDialogOpen(true)\n        }}\n      >\n        <FaPlus className=\"inline\" /> Add {subreddit_name_prefixed} to feed\n      </ButtonM1>\n      {addToFeedDialogOpen ? (\n        <Suspense fallback={null}>\n          <AddToFeedDialog\n            subreddit={subreddit}\n            onClose={() => {\n              setAddToFeedDialogOpen(false)\n            }}\n          />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n}\n","import { Suspense, lazy, useState } from 'react'\n\nimport { FaPlus } from 'react-icons/fa6'\nimport { MdBlock, MdFavorite } from 'react-icons/md'\nimport { Link } from 'react-router-dom'\n\nimport ButtonM1 from './ButtonM1'\nimport { useAppStore } from './store'\nimport { hasFavorite } from './util'\n\nimport type { Post } from './util'\n\n// lazies\nconst AddToFeedDialog = lazy(() => import('./AddToFeedDialog'))\n\nexport default function UserButtons({ post }: { post: Post }) {\n  const store = useAppStore()\n  const { author } = post\n  const { favorites, blocked } = store\n  const [addToFeedDialogOpen, setAddToFeedDialogOpen] = useState(false)\n  const hasFavUser = hasFavorite(`/user/${author}`, favorites)\n  const userreddit = `/u/${author}`\n  return (\n    <div>\n      <Link to={`/user/${author}`}>\n        <ButtonM1>Browse {`/u/${author}`}</ButtonM1>\n      </Link>\n      {hasFavUser ? null : (\n        <ButtonM1\n          onClick={() => {\n            store.addFavorite(`/user/${author}`)\n          }}\n        >\n          <MdFavorite className=\"inline\" /> {userreddit}\n        </ButtonM1>\n      )}\n      {hasFavUser || blocked.includes(author) ? null : (\n        <ButtonM1\n          onClick={() => {\n            store.setBlocked(author)\n          }}\n        >\n          <MdBlock className=\"inline\" /> Block {userreddit}\n        </ButtonM1>\n      )}\n      <ButtonM1\n        onClick={() => {\n          setAddToFeedDialogOpen(true)\n        }}\n      >\n        <FaPlus className=\"inline\" /> Add {userreddit} to feed\n      </ButtonM1>\n      {addToFeedDialogOpen ? (\n        <Suspense fallback={null}>\n          <AddToFeedDialog\n            subreddit={`u_${author}`}\n            onClose={() => {\n              setAddToFeedDialogOpen(false)\n            }}\n          />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n}\n","import SubredditButtons from './SubredditButtons'\nimport UserButtons from './UserButtons'\n\nimport type { Post } from './util'\n\nexport default function CardButtons({ post }: { post: Post }) {\n  const { subreddit_name_prefixed, author } = post\n  const userreddit = `u/${author}`\n  return (\n    <div>\n      <UserButtons post={post} />\n      {userreddit === subreddit_name_prefixed ? null : (\n        <SubredditButtons post={post} />\n      )}\n    </div>\n  )\n}\n","import { formatDistanceToNowStrict } from 'date-fns'\nimport { BiSolidUpvote } from 'react-icons/bi'\n\nimport CardButtons from './CardButtons'\nimport Link from './Link'\nimport { useAppStore } from './store'\nimport { type Post, decode } from './util'\n\nexport default function CardHeader({ post }: { post: Post }) {\n  const { hideButtons } = useAppStore()\n  const {\n    author,\n    subreddit_name_prefixed: subreddit,\n    title,\n    permalink,\n    url,\n  } = post\n  return (\n    <div>\n      <h4 className=\"inline\">\n        {decode(title)} (\n        {formatDistanceToNowStrict(new Date(post.created * 1000), {\n          addSuffix: true,\n        })}\n        ) [{post.score} <BiSolidUpvote className=\"inline\" />]\n      </h4>{' '}\n      (\n      <Link\n        href={`https://reddit.com/u/${author}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        user\n      </Link>\n      ) (\n      <Link href={url} target=\"_blank\" rel=\"noreferrer\">\n        url\n      </Link>\n      ) (\n      <Link\n        href={`https://reddit.com/${subreddit}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        subreddit\n      </Link>\n      ) (\n      <Link\n        href={`https://reddit.com${permalink}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        comments\n      </Link>\n      ){hideButtons ? null : <CardButtons post={post} />}\n    </div>\n  )\n}\n","import { useState } from 'react'\n\nexport default function ImageCard({\n  title,\n  url,\n}: {\n  title: string\n  url: string\n}) {\n  const [fullSize, setFullSize] = useState(false)\n  return (\n    <img\n      alt={title}\n      loading=\"lazy\"\n      onClick={() => {\n        setFullSize(!fullSize)\n      }}\n      className={fullSize ? 'm-auto' : 'w-full max-h-[80vh] object-contain'}\n      src={url}\n    />\n  )\n}\n","import { lazy } from 'react'\n\nimport CardHeader from './CardHeader'\nimport ImageCard from './ImageCard'\n\nimport type { Post } from './util'\n\nconst RedGifsCard = lazy(() => import('./RedGifsCard'))\nconst GalleryCard = lazy(() => import('./GalleryCard'))\n\nfunction isPic(url: string) {\n  return (\n    !url.includes('redgifs') &&\n    (url.endsWith('.jpg') ||\n      url.endsWith('.jpeg') ||\n      url.endsWith('.webp') ||\n      url.endsWith('.png') ||\n      url.endsWith('.gif') ||\n      url.endsWith('.webp'))\n  )\n}\n\nexport default function Card({ post }: { post: Post }) {\n  const { title, url } = post\n  return (\n    <div>\n      <CardHeader post={post} />\n      {url.startsWith('https://www.reddit.com/gallery') ? (\n        <GalleryCard post={post} />\n      ) : url.includes('redgifs') ? (\n        <RedGifsCard post={post} />\n      ) : isPic(url) ? (\n        <ImageCard title={title} url={url} />\n      ) : (\n        <div>\n          We do not know how to embed this post type yet!{' '}\n          <a href={url}>\n            {url} {title}\n          </a>\n        </div>\n      )}\n    </div>\n  )\n}\n","import Button from './Button'\nimport { useAppStore } from './store'\n\nexport default function NoResultsMessage({\n  totalFiltered,\n}: {\n  totalPosts: number\n  commentTypeFiltered: number\n  urlTypeFiltered: number\n  gifFiltered: number\n  redGifsOnlyFiltered: number\n  noRedGifsFiltered: number\n  pinnedFiltered: number\n  blockedFiltered: number\n  remainingPosts: number\n  totalFiltered: number\n}) {\n  const store = useAppStore()\n  const { redGifsOnly } = store\n  return (\n    <>\n      <h1>\n        Check your filters in the settings or this may just have been a page of\n        comments if you are browsing a user page\n      </h1>\n      {redGifsOnly ? (\n        <div>\n          Note: RedGifs only is on.\n          <Button\n            onClick={() => {\n              store.setRedGifsOnly(!redGifsOnly)\n            }}\n          >\n            Turn off RedGifs only\n          </Button>\n        </div>\n      ) : null}\n      <div>\n        {totalFiltered ? (\n          <div>\n            Total posts filtered out (non-image posts, not matching filters,\n            etc): {totalFiltered}\n          </div>\n        ) : null}\n      </div>\n      <div>\n        Note that we are not able to embed v.redd.it videos from e.g. popular\n        SFW reddits\n      </div>\n    </>\n  )\n}\n","import { type Post, deduplicate } from './util'\n\nexport interface FilterStats {\n  totalPosts: number\n  commentTypeFiltered: number\n  urlTypeFiltered: number\n  gifFiltered: number\n  redGifsOnlyFiltered: number\n  noRedGifsFiltered: number\n  pinnedFiltered: number\n  blockedFiltered: number\n  remainingPosts: number\n}\n\nexport interface FilterOptions {\n  noGifs: boolean\n  blocked: string[]\n  skipPinned: boolean\n  dedupe: boolean\n  noRedGifs: boolean\n  redGifsOnly: boolean\n}\n\nexport function filterPosts(posts: Post[], options: FilterOptions): { filteredPosts: Post[], stats: FilterStats } {\n  let result = posts\n  const totalPosts = posts.length\n  const stats: FilterStats = {\n    totalPosts,\n    commentTypeFiltered: 0,\n    urlTypeFiltered: 0,\n    gifFiltered: 0,\n    redGifsOnlyFiltered: 0,\n    noRedGifsFiltered: 0,\n    pinnedFiltered: 0,\n    blockedFiltered: 0,\n    remainingPosts: 0\n  }\n\n  // Filter out comments\n  const afterCommentFilter = result.filter(post => !('comment_type' in post))\n  stats.commentTypeFiltered = result.length - afterCommentFilter.length\n  result = afterCommentFilter\n\n  // Filter by URL type\n  const afterUrlFilter = result.filter(\n    ({ url }) =>\n      url.includes('redgifs') ||\n      url.endsWith('.jpg') ||\n      url.endsWith('.webp') ||\n      url.endsWith('.jpeg') ||\n      url.endsWith('.png') ||\n      url.endsWith('.gif') ||\n      url.endsWith('.webp') ||\n      url.startsWith('https://www.reddit.com/gallery'),\n  )\n  stats.urlTypeFiltered = result.length - afterUrlFilter.length\n  result = afterUrlFilter\n\n  // Filter GIFs if needed\n  const afterGifFilter = result.filter(post =>\n    options.noGifs ? !post.url.endsWith('.gif') : true,\n  )\n  stats.gifFiltered = result.length - afterGifFilter.length\n  result = afterGifFilter\n\n  // Filter for RedGifs only if needed\n  const afterRedGifsOnlyFilter = result.filter(post =>\n    options.redGifsOnly ? post.url.includes('redgifs') : true,\n  )\n  stats.redGifsOnlyFiltered = result.length - afterRedGifsOnlyFilter.length\n  result = afterRedGifsOnlyFilter\n\n  // Filter out RedGifs if needed\n  const afterNoRedGifsFilter = result.filter(post =>\n    options.noRedGifs ? !post.url.includes('redgifs') : true,\n  )\n  stats.noRedGifsFiltered = result.length - afterNoRedGifsFilter.length\n  result = afterNoRedGifsFilter\n\n  // Filter pinned posts if needed\n  const afterPinnedFilter = result.filter(post =>\n    options.skipPinned ? !post.pinned : true,\n  )\n  stats.pinnedFiltered = result.length - afterPinnedFilter.length\n  result = afterPinnedFilter\n\n  // Filter blocked authors\n  const afterBlockedFilter = result.filter(\n    post => !options.blocked.includes(post.author),\n  )\n  stats.blockedFiltered = result.length - afterBlockedFilter.length\n  result = afterBlockedFilter\n\n  if (options.dedupe) {\n    result = deduplicate(result, post => post.url)\n  }\n\n  stats.remainingPosts = result.length\n  \n  return {\n    filteredPosts: result,\n    stats\n  }\n}\n\n","import Card from './Card'\nimport NoResultsMessage from './NoResultsMessage'\nimport { filterPosts } from './postFilters'\nimport { useAppStore } from './store'\nimport { type Post } from './util'\n\nexport default function CardList({ posts }: { posts: Post[] }) {\n  const {\n    noGifs,\n    blocked,\n    skipPinned,\n    dedupe,\n    fullscreen,\n    noRedGifs,\n    redGifsOnly,\n  } = useAppStore()\n  \n  const { filteredPosts: result, stats } = filterPosts(posts, {\n    noGifs,\n    blocked,\n    skipPinned,\n    dedupe,\n    noRedGifs,\n    redGifsOnly,\n  })\n  return (\n    <div className=\"flex justify-center overflow-hidden\">\n      <div className={fullscreen ? 'lg:w-11/12' : 'lg:w-1/2'}>\n        <div className=\"flex flex-col space-y-20\">\n          {result.length > 0 ? (\n            result.map(post => <Card key={post.id} post={post} />)\n          ) : (\n            <NoResultsMessage\n              totalPosts={stats.totalPosts}\n              commentTypeFiltered={stats.commentTypeFiltered}\n              urlTypeFiltered={stats.urlTypeFiltered}\n              gifFiltered={stats.gifFiltered}\n              redGifsOnlyFiltered={stats.redGifsOnlyFiltered}\n              noRedGifsFiltered={stats.noRedGifsFiltered}\n              pinnedFiltered={stats.pinnedFiltered}\n              blockedFiltered={stats.blockedFiltered}\n              remainingPosts={stats.remainingPosts}\n              totalFiltered={stats.totalPosts - stats.remainingPosts}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export default function LoadingSpinner() {\n  return (\n    <svg\n      className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      style={{ width: 100, height: 100 }}\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        className=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      />\n    </svg>\n  )\n}\n"],"file":"assets/LoadingSpinner-Di7IlrFE.js"}