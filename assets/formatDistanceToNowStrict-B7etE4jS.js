import{c as S,n as z,g as N,a as g,b as w,e as T,m as D,d as x,h as M,i as y,f as Y}from"./en-US-DK8Z8mF7.js";function b(c,i,e){const I=w(),t=(e==null?void 0:e.locale)??I.locale??T,m=S(c,i);if(isNaN(m))throw new RangeError("Invalid time value");const a=Object.assign({},e,{addSuffix:e==null?void 0:e.addSuffix,comparison:m}),[o,h]=z(e==null?void 0:e.in,...m>0?[i,c]:[c,i]),r=N((e==null?void 0:e.roundingMethod)??"round"),l=h.getTime()-o.getTime(),f=l/y,O=g(h)-g(o),u=(l-O)/y,d=e==null?void 0:e.unit;let n;if(d?n=d:f<1?n="second":f<60?n="minute":f<D?n="hour":u<x?n="day":u<M?n="month":n="year",n==="second"){const s=r(l/1e3);return t.formatDistance("xSeconds",s,a)}else if(n==="minute"){const s=r(f);return t.formatDistance("xMinutes",s,a)}else if(n==="hour"){const s=r(f/60);return t.formatDistance("xHours",s,a)}else if(n==="day"){const s=r(u/D);return t.formatDistance("xDays",s,a)}else if(n==="month"){const s=r(u/x);return s===12&&d!=="month"?t.formatDistance("xYears",1,a):t.formatDistance("xMonths",s,a)}else{const s=r(u/M);return t.formatDistance("xYears",s,a)}}function R(c,i){return b(c,Y(c),i)}export{R as f};
//# sourceMappingURL=formatDistanceToNowStrict-B7etE4jS.js.map
