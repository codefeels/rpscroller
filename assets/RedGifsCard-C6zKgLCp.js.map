{"version":3,"file":"RedGifsCard-C6zKgLCp.js","sources":["../../src/RedGifsCard.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { useDebounceValue, useIntersectionObserver } from 'usehooks-ts'\n// locals\nimport { redGifUrlToId, type Post } from './util'\nimport { useAppStore } from './store'\nimport Button from './Button'\n\nfunction RedGifsCardLoaded({ post }: { post: Post }) {\n  const { title, url } = post\n  const [superTall, setSuperTall] = useState(false)\n  return (\n    <>\n      <Button\n        onClick={() => {\n          setSuperTall(!superTall)\n        }}\n      >\n        {superTall ? 'Normal' : 'Supertall'}\n      </Button>\n      <iframe\n        title={title}\n        src={`https://www.redgifs.com/ifr/${redGifUrlToId(url)}`}\n        className={superTall ? 'h-[200vh] w-full' : 'h-[80vh] w-full'}\n        loading=\"lazy\"\n        allowFullScreen\n        scrolling=\"no\"\n        frameBorder=\"0\"\n      />\n    </>\n  )\n}\n\nfunction RedGifsLoading() {\n  return (\n    <div className=\"animate-pulse space-y-4 w-full h-[80vh]\">\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n    </div>\n  )\n}\n\nexport default function RedGifsCard({ post }: { post: Post }) {\n  const { isFullscreen } = useAppStore()\n  const { isIntersecting, ref } = useIntersectionObserver({\n    threshold: isFullscreen ? 1 : 0.4,\n  })\n  const [debouncedIsIntersecting] = useDebounceValue(isIntersecting, 1000)\n\n  return (\n    <div ref={ref}>\n      {debouncedIsIntersecting ? (\n        <RedGifsCardLoaded post={post} />\n      ) : (\n        <RedGifsLoading />\n      )}\n    </div>\n  )\n}\n"],"names":["RedGifsCardLoaded","post","title","url","superTall","setSuperTall","useState","jsxs","Fragment","jsx","Button","redGifUrlToId","RedGifsLoading","RedGifsCard","isFullscreen","useAppStore","isIntersecting","ref","useIntersectionObserver","debouncedIsIntersecting","useDebounceValue"],"mappings":"kFAOA,SAASA,EAAkB,CAAE,KAAAC,GAAwB,CAC7C,KAAA,CAAE,MAAAC,EAAO,IAAAC,CAAA,EAAQF,EACjB,CAACG,EAAWC,CAAY,EAAIC,EAAAA,SAAS,EAAK,EAChD,OAEIC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,EAAA,IAACC,EAAA,CACC,QAAS,IAAM,CACbL,EAAa,CAACD,CAAS,CACzB,EAEC,WAAY,SAAW,WAAA,CAC1B,EACAK,EAAA,IAAC,SAAA,CACC,MAAAP,EACA,IAAK,+BAA+BS,EAAcR,CAAG,CAAC,GACtD,UAAWC,EAAY,mBAAqB,kBAC5C,QAAQ,OACR,gBAAe,GACf,UAAU,KACV,YAAY,GAAA,CAAA,CACd,EACF,CAEJ,CAEA,SAASQ,GAAiB,CAEtB,OAAAL,EAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAI,UAAU,qCAAsC,CAAA,EACrDA,EAAAA,IAAC,MAAI,CAAA,UAAU,qCAAsC,CAAA,EACrDA,EAAAA,IAAC,MAAI,CAAA,UAAU,qCAAsC,CAAA,EACrDA,EAAAA,IAAC,MAAI,CAAA,UAAU,qCAAsC,CAAA,CAAA,EACvD,CAEJ,CAEwB,SAAAI,EAAY,CAAE,KAAAZ,GAAwB,CACtD,KAAA,CAAE,aAAAa,CAAa,EAAIC,EAAY,EAC/B,CAAE,eAAAC,EAAgB,IAAAC,CAAI,EAAIC,EAAwB,CACtD,UAAWJ,EAAe,EAAI,EAAA,CAC/B,EACK,CAACK,CAAuB,EAAIC,EAAiBJ,EAAgB,GAAI,EAGrE,OAAAP,EAAAA,IAAC,MAAI,CAAA,IAAAQ,EACF,SACCE,EAAAV,EAAA,IAACT,GAAkB,KAAAC,CAAY,CAAA,EAE9BQ,EAAAA,IAAAG,EAAA,CAAA,CAAe,CAEpB,CAAA,CAEJ"}