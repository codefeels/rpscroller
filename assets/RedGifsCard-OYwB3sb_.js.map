{"version":3,"file":"RedGifsCard-OYwB3sb_.js","sources":["../../src/RedGifsCard.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport { useDebounceValue, useIntersectionObserver } from 'usehooks-ts'\n\nimport { useAppStore } from './store'\nimport { useSmallScreen } from './useSmallScreen'\nimport { redGifUrlToId } from './util'\n\nimport type { Post } from './util'\n\nfunction RedGifsCardLoaded({ post, val }: { post: Post; val: number }) {\n  const { title, url } = post\n  return (\n    <>\n      <iframe\n        title={title}\n        src={`https://www.redgifs.com/ifr/${redGifUrlToId(url)}`}\n        className=\"w-full overflow-hidden\"\n        style={{ height: `${val}vh` }}\n        loading=\"lazy\"\n        allowFullScreen\n      />\n    </>\n  )\n}\n\nfunction RedGifsLoading({ val }: { val: number }) {\n  return (\n    <div\n      className={`animate-pulse space-y-4 w-full`}\n      style={{ height: `${val}vh` }}\n    >\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n    </div>\n  )\n}\n\nexport default function RedGifsCard({ post }: { post: Post }) {\n  const { isFullscreen } = useAppStore()\n\n  const [val, setVal] = useState(80)\n  const { isIntersecting, ref } = useIntersectionObserver({\n    threshold: isFullscreen ? 1 : val > 100 ? 0.2 : 0.4,\n  })\n  const [debouncedIsIntersecting] = useDebounceValue(isIntersecting, 1000)\n  const small = useSmallScreen()\n\n  return (\n    <div ref={ref}>\n      {small ? null : (\n        <input\n          type=\"range\"\n          min={50}\n          max={300}\n          className=\"range [--range-fill:0]\"\n          value={val}\n          onChange={event => {\n            setVal(+event.target.value)\n          }}\n        />\n      )}\n      {debouncedIsIntersecting ? (\n        <RedGifsCardLoaded val={val} post={post} />\n      ) : (\n        <RedGifsLoading val={val} />\n      )}\n    </div>\n  )\n}\n"],"names":["RedGifsCardLoaded","post","val","title","url","jsx","Fragment","redGifUrlToId","RedGifsLoading","jsxs","RedGifsCard","isFullscreen","useAppStore","setVal","useState","isIntersecting","ref","useIntersectionObserver","debouncedIsIntersecting","useDebounceValue","small","useSmallScreen","event"],"mappings":"kFAUA,SAASA,EAAkB,CAAE,KAAAC,EAAM,IAAAC,GAAoC,CAC/D,KAAA,CAAE,MAAAC,EAAO,IAAAC,CAAA,EAAQH,EACvB,OAEII,MAAAC,EAAAA,SAAA,CAAA,SAAAD,EAAA,IAAC,SAAA,CACC,MAAAF,EACA,IAAK,+BAA+BI,EAAcH,CAAG,CAAC,GACtD,UAAU,yBACV,MAAO,CAAE,OAAQ,GAAGF,CAAG,IAAK,EAC5B,QAAQ,OACR,gBAAe,EAAA,CAAA,EAEnB,CAEJ,CAEA,SAASM,EAAe,CAAE,IAAAN,GAAwB,CAE9C,OAAAO,EAAA,KAAC,MAAA,CACC,UAAW,iCACX,MAAO,CAAE,OAAQ,GAAGP,CAAG,IAAK,EAE5B,SAAA,CAACG,EAAAA,IAAA,MAAA,CAAI,UAAU,qCAAsC,CAAA,EACrDA,EAAAA,IAAC,MAAI,CAAA,UAAU,qCAAsC,CAAA,EACrDA,EAAAA,IAAC,MAAI,CAAA,UAAU,qCAAsC,CAAA,EACrDA,EAAAA,IAAC,MAAI,CAAA,UAAU,qCAAsC,CAAA,CAAA,CAAA,CACvD,CAEJ,CAEwB,SAAAK,EAAY,CAAE,KAAAT,GAAwB,CACtD,KAAA,CAAE,aAAAU,CAAa,EAAIC,EAAY,EAE/B,CAACV,EAAKW,CAAM,EAAIC,EAAAA,SAAS,EAAE,EAC3B,CAAE,eAAAC,EAAgB,IAAAC,CAAI,EAAIC,EAAwB,CACtD,UAAWN,EAAe,EAAIT,EAAM,IAAM,GAAM,EAAA,CACjD,EACK,CAACgB,CAAuB,EAAIC,EAAiBJ,EAAgB,GAAI,EACjEK,EAAQC,EAAe,EAG3B,OAAAZ,OAAC,OAAI,IAAAO,EACF,SAAA,CAAAI,EAAQ,KACPf,EAAA,IAAC,QAAA,CACC,KAAK,QACL,IAAK,GACL,IAAK,IACL,UAAU,yBACV,MAAOH,EACP,SAAmBoB,GAAA,CACVT,EAAA,CAACS,EAAM,OAAO,KAAK,CAAA,CAC5B,CACF,EAEDJ,QACElB,EAAkB,CAAA,IAAAE,EAAU,KAAAD,CAAY,CAAA,EAEzCI,EAAA,IAACG,GAAe,IAAAN,CAAU,CAAA,CAAA,EAE9B,CAEJ"}