{"version":3,"file":"FavoritesDialog-DCe3yhuX.js","sources":["../../node_modules/date-fns/formatDistanceToNow.js","../../src/FavoritesDialog.tsx"],"sourcesContent":["import { constructNow } from \"./constructNow.js\";\n\nimport { formatDistance } from \"./formatDistance.js\";\n\n/**\n * The {@link formatDistanceToNow} function options.\n */\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param date - The given date\n * @param options - The object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistanceToNow(date, options) {\n  return formatDistance(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNow;\n","import { useState } from 'react'\nimport { formatDistanceToNow } from 'date-fns'\n// icons\nimport { IoMdHome } from 'react-icons/io'\nimport { MdDelete } from 'react-icons/md'\nimport { FaChevronUp, FaChevronDown } from 'react-icons/fa6'\n// other\nimport { type Favorite, normalizeForDisplay, useAppStore } from './store'\nimport Button from './Button'\nimport BaseDialog from './BaseDialog'\n\nexport default function Favorites({\n  open,\n  onClose,\n  favorites,\n  title,\n}: {\n  open: boolean\n  title: string\n  onClose: () => void\n  favorites: Favorite[]\n}) {\n  const store = useAppStore()\n  const [sortVisits, setSortVisits] = useState(-1)\n  const [sortDateAdded, setSortDateAdded] = useState(0)\n  const favs = [...favorites]\n    .map(f => ({ ...f, dateAdded: new Date(f.dateAdded) }))\n    .sort((a, b) => (a.visitedCount - b.visitedCount) * sortVisits)\n    .sort((a, b) => (+a.dateAdded - +b.dateAdded) * sortDateAdded)\n  return (\n    <BaseDialog open={open} onClose={onClose}>\n      <h4 className=\"font-extrabold\">{title}</h4>\n      {favorites.length === 0 ? (\n        <div>No favorites</div>\n      ) : (\n        <div className=\"overflow-auto\">\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th className=\"whitespace-nowrap\">\n                  <Button\n                    onClick={() => {\n                      setSortDateAdded(0)\n                      if (sortVisits === 0) {\n                        setSortVisits(-1)\n                      } else if (sortVisits === -1) {\n                        setSortVisits(1)\n                      } else {\n                        setSortVisits(0)\n                      }\n                    }}\n                  >\n                    # Visits{' '}\n                    {sortVisits === 1 ? (\n                      <FaChevronUp className=\"inline\" />\n                    ) : sortVisits === -1 ? (\n                      <FaChevronDown className=\"inline\" />\n                    ) : null}\n                  </Button>\n                </th>\n                <th className=\"whitespace-nowrap\">\n                  <Button\n                    onClick={() => {\n                      setSortVisits(0)\n                      if (sortDateAdded === 0) {\n                        setSortDateAdded(-1)\n                      } else if (sortDateAdded === -1) {\n                        setSortDateAdded(1)\n                      } else {\n                        setSortDateAdded(0)\n                      }\n                    }}\n                  >\n                    Date added{' '}\n                    {sortDateAdded === 1 ? (\n                      <FaChevronUp className=\"inline\" />\n                    ) : sortDateAdded === -1 ? (\n                      <FaChevronDown className=\"inline\" />\n                    ) : null}\n                  </Button>\n                </th>\n                <th className=\"whitespace-nowrap\">Delete</th>\n                <th className=\"whitespace-nowrap\">Home</th>\n              </tr>\n            </thead>\n            <tbody>\n              {favs.map(f => (\n                <tr key={f.name}>\n                  <td className=\"whitespace-nowrap\">\n                    <Button\n                      onClick={() => {\n                        store.setVal(f.name)\n                      }}\n                    >\n                      {normalizeForDisplay(f.name)}\n                    </Button>\n                  </td>\n                  <td>{f.visitedCount}</td>\n                  <td>\n                    {formatDistanceToNow(f.dateAdded, { addSuffix: true })}\n                  </td>\n                  <td>\n                    <Button\n                      onClick={() => {\n                        store.removeFavorite(f.name)\n                      }}\n                    >\n                      <MdDelete className=\"inline\" />\n                    </Button>\n                  </td>\n\n                  <td>\n                    <Button\n                      onClick={() => {\n                        store.setDefaultPage(f.name)\n                      }}\n                    >\n                      <IoMdHome className=\"inline\" />\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </BaseDialog>\n  )\n}\n"],"names":["formatDistanceToNow","date","options","formatDistance","constructNow","Favorites","open","onClose","favorites","title","store","useAppStore","sortVisits","setSortVisits","useState","sortDateAdded","setSortDateAdded","favs","f","a","b","jsxs","BaseDialog","jsx","Button","FaChevronUp","FaChevronDown","normalizeForDisplay","MdDelete","IoMdHome"],"mappings":"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","x_google_ignoreList":[0]}