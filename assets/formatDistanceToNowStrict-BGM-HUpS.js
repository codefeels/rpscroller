import{c as S,n as z,g as N,a as g,b as w,e as T,m as D,d as x,h as M,i as y,f as p}from"./en-US-A-7Ux56e.js";function Y(o,c,i){const I=w(),s=i?.locale??I.locale??T,u=S(o,c);if(isNaN(u))throw new RangeError("Invalid time value");const t=Object.assign({},i,{addSuffix:i?.addSuffix,comparison:u}),[d,h]=z(i?.in,...u>0?[c,o]:[o,c]),a=N(i?.roundingMethod??"round"),m=h.getTime()-d.getTime(),r=m/y,O=g(h)-g(d),f=(m-O)/y,l=i?.unit;let e;if(l?e=l:r<1?e="second":r<60?e="minute":r<D?e="hour":f<x?e="day":f<M?e="month":e="year",e==="second"){const n=a(m/1e3);return s.formatDistance("xSeconds",n,t)}else if(e==="minute"){const n=a(r);return s.formatDistance("xMinutes",n,t)}else if(e==="hour"){const n=a(r/60);return s.formatDistance("xHours",n,t)}else if(e==="day"){const n=a(f/D);return s.formatDistance("xDays",n,t)}else if(e==="month"){const n=a(f/x);return n===12&&l!=="month"?s.formatDistance("xYears",1,t):s.formatDistance("xMonths",n,t)}else{const n=a(f/M);return s.formatDistance("xYears",n,t)}}function v(o,c){return Y(o,p(o),c)}export{v as f};
//# sourceMappingURL=formatDistanceToNowStrict-BGM-HUpS.js.map
