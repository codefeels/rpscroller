{"version":3,"file":"RedGifsCard-CifgNEVF.js","sources":["../../src/RedGifsCard.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport { useDebounceValue, useIntersectionObserver } from 'usehooks-ts'\n\n// locals\nimport Button from './Button'\nimport { useAppStore } from './store'\nimport { useSmallScreen } from './useSmallScreen'\nimport { type Post, redGifUrlToId } from './util'\n\nfunction RedGifsCardLoaded({\n  post,\n  superTall,\n}: {\n  superTall: boolean\n  post: Post\n}) {\n  const { title, url } = post\n  const h = superTall ? 'h-[200vh] w-full' : 'h-[80vh] w-full'\n  return (\n    <>\n      <iframe\n        title={title}\n        src={`https://www.redgifs.com/ifr/${redGifUrlToId(url)}`}\n        className={`${h} overflow-hidden`}\n        loading=\"lazy\"\n        allowFullScreen\n      />\n    </>\n  )\n}\n\nfunction RedGifsLoading({ superTall }: { superTall: boolean }) {\n  return (\n    <div\n      className={`animate-pulse space-y-4 w-full ${superTall ? 'h-[200vh] w-full' : 'h-[80vh] w-full'}`}\n    >\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n      <div className=\"rounded-full bg-slate-700 h-10 w-10\" />\n    </div>\n  )\n}\n\nexport default function RedGifsCard({ post }: { post: Post }) {\n  const { isFullscreen } = useAppStore()\n\n  const [superTall, setSuperTall] = useState(false)\n  const { isIntersecting, ref } = useIntersectionObserver({\n    threshold: isFullscreen ? 1 : superTall ? 0.2 : 0.4,\n  })\n  const [debouncedIsIntersecting] = useDebounceValue(isIntersecting, 1000)\n  const small = useSmallScreen()\n\n  return (\n    <div ref={ref}>\n      {small ? null : (\n        <Button\n          onClick={() => {\n            setSuperTall(!superTall)\n          }}\n        >\n          {superTall ? 'Normal' : 'Supertall'}\n        </Button>\n      )}\n      {debouncedIsIntersecting ? (\n        <RedGifsCardLoaded superTall={superTall} post={post} />\n      ) : (\n        <RedGifsLoading superTall={superTall} />\n      )}\n    </div>\n  )\n}\n"],"names":["RedGifsCardLoaded","post","superTall","title","url","h","jsx","Fragment","redGifUrlToId","RedGifsLoading","jsxs","RedGifsCard","isFullscreen","useAppStore","setSuperTall","useState","isIntersecting","ref","useIntersectionObserver","debouncedIsIntersecting","useDebounceValue","small","useSmallScreen","Button"],"mappings":"oFAUA,SAASA,EAAkB,CACzB,KAAAC,EACA,UAAAC,CACF,EAGG,CACK,KAAA,CAAE,MAAAC,EAAO,IAAAC,CAAA,EAAQH,EACjBI,EAAIH,EAAY,mBAAqB,kBAC3C,OAEII,MAAAC,EAAAA,SAAA,CAAA,SAAAD,EAAA,IAAC,SAAA,CACC,MAAAH,EACA,IAAK,+BAA+BK,EAAcJ,CAAG,CAAC,GACtD,UAAW,GAAGC,CAAC,mBACf,QAAQ,OACR,gBAAe,EAAA,CAAA,EAEnB,CAEJ,CAEA,SAASI,EAAe,CAAE,UAAAP,GAAqC,CAE3D,OAAAQ,EAAA,KAAC,MAAA,CACC,UAAW,kCAAkCR,EAAY,mBAAqB,iBAAiB,GAE/F,SAAA,CAACI,EAAAA,IAAA,MAAA,CAAI,UAAU,qCAAsC,CAAA,EACrDA,EAAAA,IAAC,MAAI,CAAA,UAAU,qCAAsC,CAAA,EACrDA,EAAAA,IAAC,MAAI,CAAA,UAAU,qCAAsC,CAAA,EACrDA,EAAAA,IAAC,MAAI,CAAA,UAAU,qCAAsC,CAAA,CAAA,CAAA,CACvD,CAEJ,CAEwB,SAAAK,EAAY,CAAE,KAAAV,GAAwB,CACtD,KAAA,CAAE,aAAAW,CAAa,EAAIC,EAAY,EAE/B,CAACX,EAAWY,CAAY,EAAIC,EAAAA,SAAS,EAAK,EAC1C,CAAE,eAAAC,EAAgB,IAAAC,CAAI,EAAIC,EAAwB,CACtD,UAAWN,EAAe,EAAIV,EAAY,GAAM,EAAA,CACjD,EACK,CAACiB,CAAuB,EAAIC,EAAiBJ,EAAgB,GAAI,EACjEK,EAAQC,EAAe,EAG3B,OAAAZ,OAAC,OAAI,IAAAO,EACF,SAAA,CAAAI,EAAQ,KACPf,EAAA,IAACiB,EAAA,CACC,QAAS,IAAM,CACbT,EAAa,CAACZ,CAAS,CACzB,EAEC,WAAY,SAAW,WAAA,CAC1B,EAEDiB,QACEnB,EAAkB,CAAA,UAAAE,EAAsB,KAAAD,CAAY,CAAA,EAErDK,EAAA,IAACG,GAAe,UAAAP,CAAsB,CAAA,CAAA,EAE1C,CAEJ"}