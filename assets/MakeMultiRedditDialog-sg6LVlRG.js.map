{"version":3,"file":"MakeMultiRedditDialog-sg6LVlRG.js","sources":["../../src/MakeMultiRedditDialog.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport { formatDistanceToNowStrict } from 'date-fns'\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa6'\n\nimport BaseDialog from './BaseDialog'\nimport Button from './Button'\nimport { useAppStore } from './store'\nimport {\n  isUserSubreddit,\n  normalizeForDisplay,\n  normalizeSubreddit,\n} from './util'\n\nexport default function MakeMultiRedditDialog({\n  open,\n  onClose,\n}: {\n  open: boolean\n  onClose: () => void\n}) {\n  const store = useAppStore()\n  const { favorites } = store\n  const [multi, setMulti] = useState<string[]>([])\n  const [sortVisits, setSortVisits] = useState(-1)\n  const [sortDateAdded, setSortDateAdded] = useState(0)\n  const [feedName, setFeedName] = useState('')\n  const [creatingFeed, setCreatingFeed] = useState(true)\n\n  const favs = [\n    ...favorites\n      .filter(f => !isUserSubreddit(f.name))\n      .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase())),\n    ...favorites\n      .filter(f => isUserSubreddit(f.name))\n      .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase())),\n  ]\n    .map(f => ({ ...f, dateAdded: new Date(f.dateAdded) }))\n    .sort((a, b) => (a.visitedCount - b.visitedCount) * sortVisits)\n    .sort((a, b) => (+a.dateAdded - +b.dateAdded) * sortDateAdded)\n  return (\n    <BaseDialog open={open} onClose={onClose}>\n      {creatingFeed ? (\n        <div>\n          <h4>\n            Make multi-reddit\n            <div>\n              <div>\n                <Button\n                  onClick={() => {\n                    setCreatingFeed(false)\n                  }}\n                >\n                  Create feed\n                </Button>\n                <Button\n                  onClick={() => {\n                    setMulti([])\n                  }}\n                >\n                  Clear\n                </Button>\n              </div>\n            </div>\n          </h4>\n\n          <div className=\"max-h-[80vh] overflow-auto\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th className=\"whitespace-nowrap\">\n                    <Button\n                      onClick={() => {\n                        setSortDateAdded(0)\n                        if (sortVisits === 0) {\n                          setSortVisits(-1)\n                        } else if (sortVisits === -1) {\n                          setSortVisits(1)\n                        } else {\n                          setSortVisits(0)\n                        }\n                      }}\n                    >\n                      # Visits{' '}\n                      {sortVisits === 1 ? (\n                        <FaChevronUp className=\"inline\" />\n                      ) : sortVisits === -1 ? (\n                        <FaChevronDown className=\"inline\" />\n                      ) : null}\n                    </Button>\n                  </th>\n                  <th className=\"whitespace-nowrap\">\n                    <Button\n                      onClick={() => {\n                        setSortVisits(0)\n                        if (sortDateAdded === 0) {\n                          setSortDateAdded(-1)\n                        } else if (sortDateAdded === -1) {\n                          setSortDateAdded(1)\n                        } else {\n                          setSortDateAdded(0)\n                        }\n                      }}\n                    >\n                      Date added{' '}\n                      {sortDateAdded === 1 ? (\n                        <FaChevronUp className=\"inline\" />\n                      ) : sortDateAdded === -1 ? (\n                        <FaChevronDown className=\"inline\" />\n                      ) : null}\n                    </Button>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {favs.map(f => (\n                  <tr key={f.name}>\n                    <td className=\"whitespace-nowrap\">\n                      <Button\n                        onClick={() => {\n                          if (!multi.includes(normalizeSubreddit(f.name))) {\n                            setMulti([...multi, normalizeSubreddit(f.name)])\n                          }\n                        }}\n                      >\n                        {normalizeForDisplay(f.name)}\n                      </Button>\n                    </td>\n                    <td>{f.visitedCount}</td>\n                    <td>\n                      {formatDistanceToNowStrict(f.dateAdded, {\n                        addSuffix: true,\n                      })}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      ) : (\n        <div className=\"m-8\">\n          <form\n            onSubmit={event => {\n              event.preventDefault()\n              if (feedName) {\n                store.createFeed({ subreddits: multi, feedName })\n                onClose()\n              }\n            }}\n          >\n            <div>\n              <label htmlFor=\"feedname\">Feed name:</label>\n              <input\n                id=\"feedname\"\n                type=\"text\"\n                value={feedName}\n                onChange={event => {\n                  setFeedName(event.target.value)\n                }}\n              />\n              <Button type=\"submit\">Submit</Button>\n            </div>\n          </form>\n        </div>\n      )}\n    </BaseDialog>\n  )\n}\n"],"names":["MakeMultiRedditDialog","open","onClose","store","useAppStore","favorites","multi","setMulti","useState","sortVisits","setSortVisits","sortDateAdded","setSortDateAdded","feedName","setFeedName","creatingFeed","setCreatingFeed","favs","f","isUserSubreddit","a","b","BaseDialog","jsxs","jsx","Button","FaChevronUp","FaChevronDown","normalizeSubreddit","normalizeForDisplay","formatDistanceToNowStrict","event"],"mappings":"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"}